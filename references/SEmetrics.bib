% This file was created with JabRef 2.10.
% Encoding: ISO8859_1


@Article{BansiyaD02,
  Title                    = {A hierarchical model for object-oriented design quality assessment},
  Author                   = {J. Bansiya and C. G. Davis},
  Journal                  = {IEEE Transactions on Software Engineering},
  Year                     = {2002},

  Month                    = {Jan},
  Number                   = {1},
  Pages                    = {4--17},
  Volume                   = {28},

  Abstract                 = {The paper describes an improved hierarchical model for the assessment of high-level design quality attributes in object-oriented designs. In this model, structural and behavioral design properties of classes, objects, and their relationships are evaluated using a suite of object-oriented design metrics. This model relates design properties such as encapsulation, modularity, coupling, and cohesion to high-level quality attributes such as reusability, flexibility, and complexity using empirical and anecdotal information. The relationship or links from design properties to quality attributes are weighted in accordance with their influence and importance. The model is validated by using empirical and expert opinion to compare with the model results on several large commercial object-oriented systems. A key attribute of the model is that it can be easily modified to include different relationships and weights, thus providing a practical quality assessment tool adaptable to a variety of demands},
  Doi                      = {10.1109/32.979986},
  ISSN                     = {0098-5589},
  Keywords                 = {data encapsulation;object-oriented programming;software metrics;software quality;behavioral design properties;cohesion;commercial object-oriented systems;coupling;design properties;encapsulation;expert opinion;hierarchical model;high-level design quality attributes;high-level quality attributes;modularity;object-oriented design metrics;object-oriented design quality assessment;product metrics;quality assessment tool;quality attributes;reusability;Object oriented modeling;Quality assessment}
}

@Article{Chidamber1994,
  Title                    = {A metrics suite for object oriented design},
  Author                   = {S.R. Chidamber and C.F. Kemerer},
  Journal                  = {IEEE Transactions on Software Engineering},
  Year                     = {1994},

  Month                    = {Jun},
  Number                   = {6},
  Pages                    = {476--493},
  Volume                   = {20},

  Abstract                 = {Given the central role that software development plays in the delivery and application of information technology, managers are increasingly focusing on process improvement in the software development area. This demand has spurred the provision of a number of new and/or improved approaches to software development, with perhaps the most prominent being object-orientation (OO). In addition, the focus on process improvement has increased the demand for software measures, or metrics with which to manage the process. The need for such metrics is particularly acute when an organization is adopting a new technology for which established practices have yet to be developed. This research addresses these needs through the development and implementation of a new suite of metrics for OO design. Metrics developed in previous research, while contributing to the field's understanding of software development processes, have generally been subject to serious criticisms, including the lack of a theoretical base. Following Wand and Weber (1989), the theoretical base chosen for the metrics was the ontology of Bunge (1977). Six design metrics are developed, and then analytically evaluated against Weyuker's (1988) proposed set of measurement principles. An automated data collection tool was then developed and implemented to collect an empirical sample of these metrics at two field sites in order to demonstrate their feasibility and suggest ways in which managers may use these metrics for process improvement},
  Doi                      = {10.1109/32.295895},
  ISSN                     = {0098-5589},
  Keywords                 = {object-oriented methods;object-oriented programming;software metrics;automated data collection tool;measurement principles;metrics suite;object oriented design;object oriented programming;organization;process improvement;software development;software measures;Application software;Engineering management;Information management;Information technology;Ontologies;Programming;Software development management;Software engineering;Software measurement;Technology management}
}

@Book{Halstead77,
  Title                    = {Elements of software science},
  Author                   = {M.H. Halstead},
  Publisher                = {Elsevier},
  Year                     = {1977},

  Address                  = {New York ; Oxford},
  Series                   = {Elsevier Computer Science Library. Operating And Programming Systems Series; 2}
}

@InProceedings{KrishnanSLG2011,
  Title                    = {Are Change Metrics Good Predictors for an Evolving Software Product Line?},
  Author                   = {Krishnan, Sandeep and Strasburg, Chris and Lutz, Robyn R. and Go\v{s}eva-Popstojanova, Katerina},
  Booktitle                = {Proceedings of the 7th International Conference on Predictive Models in Software Engineering (Promise'11)},
  Year                     = {2011},

  Address                  = {New York, NY, USA},
  Pages                    = {7:1--7:10},
  Publisher                = {ACM},
  Series                   = {Promise'11},

  Acmid                    = {2020397},
  Articleno                = {7},
  Doi                      = {10.1145/2020390.2020397},
  ISBN                     = {978-1-4503-0709-3},
  Keywords                 = {change metrics, failure-prone files, post-release defects, prediction, reuse, software product lines},
  Location                 = {Banff, Alberta, Canada},
  Numpages                 = {10},
  Url                      = {http://doi.acm.org/10.1145/2020390.2020397}
}

@InProceedings{Lincke2008,
  Title                    = {Comparing software metrics tools},
  Author                   = {Lincke, R\"{u}diger and Lundberg, Jonas and L\"{o}we, Welf},
  Booktitle                = {Proceedings of the 2008 International Symposium on Software Testing and Analysis (ISSTA'08)},
  Year                     = {2008},

  Address                  = {New York, NY, USA},
  Pages                    = {131--142},
  Publisher                = {ACM},
  Series                   = {ISSTA'08},

  Acmid                    = {1390648},
  Doi                      = {10.1145/1390630.1390648},
  ISBN                     = {978-1-60558-050-0},
  Keywords                 = {comparing tools, software quality metrics},
  Location                 = {Seattle, WA, USA},
  Numpages                 = {12},
  Url                      = {http://doi.acm.org/10.1145/1390630.1390648}
}

@Article{mccabe76,
  Title                    = {A Complexity Measure},
  Author                   = {T.J. McCabe},
  Journal                  = {IEEE Transactions on Software Engineering},
  Year                     = {1976},

  Month                    = {December},
  Number                   = {4},
  Pages                    = {308--320},
  Volume                   = {2}
}

